{"ast":null,"code":"var _jsxFileName = \"/home/panya/Biseo/client/src/components/Test/Test.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Formvote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      content: '',\n      votetype: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert(JSON.stringify(this.state, null, '        '));\n    event.preventDefault();\n    /*\n            const data = {\n                title: this.state.title,\n                content: this.state.content,\n                votetype: this.state.votetype,\n            };\n    */\n\n    const data = new FormData(event.target);\n    fetch('http://aria.sparcs.org:32903/api/v1/votes/upload', {\n      method: 'POST',\n      body: data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"\\uD22C\\uD45C \\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"content\",\n      placeholder: \"\\uD22C\\uD45C \\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\",\n      value: this.state.content,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"votetype\",\n      placeholder: \"\\uC758\\uACB0\\uBB38\\uC548\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      value: this.state.votetype,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"\\uB9CC\\uB4E4\\uAE30\")));\n  }\n\n}\n\nclass Makevote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      voteType: 0\n    };\n  }\n\n  handleClick(mode) {\n    this.setState({\n      voteType: mode\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleClick(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"\\uCC2C\\uBC18 \\uD22C\\uD45C\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleClick(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"\\uD68C\\uC7A5 \\uC120\\uAC70\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleClick(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"\\uC0C8 \\uD15C\\uD50C\\uB9BF\")), /*#__PURE__*/React.createElement(Formvote, {\n      value: this.state.voteType,\n      onClick: (title, content, votetype) => this.props.onClick(title, content, votetype),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nclass Listvote extends React.Component {\n  render() {\n    const votelist = this.props.votelist;\n    const show_vote_list = votelist.map((vote, num) => {\n      if (!vote.title) return;\n      return /*#__PURE__*/React.createElement(\"fieldset\", {\n        key: num,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, \"\\uC81C\\uBAA9 : \", vote.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, \"\\uB0B4\\uC6A9 : \", vote.content), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, \"\\uC758\\uACB0 \\uBB38\\uC548 : \", vote.votetype));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, show_vote_list);\n  }\n\n}\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      future_votes: [{\n        title: '',\n        content: '',\n        votetype: ''\n      }],\n      stepNumber: 0\n    };\n  }\n\n  handleClick(title, content, votetype) {\n    const future_votes = this.state.future_votes.slice(0, this.state.stepNumber + 1);\n    this.setState({\n      future_votes: future_votes.concat([{\n        title: title,\n        content: content,\n        votetype: votetype\n      }]),\n      stepNumber: future_votes.length\n    });\n  }\n\n  render() {\n    const future_votes = this.state.future_votes;\n    const current = future_votes[this.state.stepNumber];\n    console.log(future_votes);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, \"sparcs \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(Makevote, {\n      title: current.title,\n      content: current.content,\n      votetype: current.votetype,\n      onClick: (title, content, votetype) => this.handleClick(title, content, votetype),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Listvote, {\n      votelist: this.state.future_votes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["/home/panya/Biseo/client/src/components/Test/Test.js"],"names":["React","axios","Formvote","Component","constructor","props","state","title","content","votetype","handleChange","bind","handleSubmit","event","setState","target","name","value","alert","JSON","stringify","preventDefault","data","FormData","fetch","method","body","render","Makevote","voteType","handleClick","mode","onClick","Listvote","votelist","show_vote_list","map","vote","num","Test","future_votes","stepNumber","slice","concat","length","current","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Formvote extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            content: '',\n            votetype: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    handleSubmit(event) {\n        alert(JSON.stringify(this.state, null, '        '));\n\t\tevent.preventDefault();\n/*\n        const data = {\n            title: this.state.title,\n            content: this.state.content,\n            votetype: this.state.votetype,\n        };\n*/\n\t\tconst data = new FormData(event.target);\n    \n\t\tfetch('http://aria.sparcs.org:32903/api/v1/votes/upload', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: data,\n\t\t});\n\n    }\n\n    render() {\n        return (\n\t\t\t<div>\n            <form onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"투표 제목을 입력하세요\"\n                    value={this.state.title}\n                    onChange={this.handleChange}\n                /><br />\n                <input\n                    type=\"text\"\n                    name=\"content\"\n                    placeholder=\"투표 내용을 입력해 주세요\"\n                    value={this.state.content}\n                    onChange={this.handleChange}\n                /><br />\n                <input\n                    type=\"text\"\n                    name=\"votetype\"\n                    placeholder=\"의결문안을 입력해주세요\"\n                    value={this.state.votetype}\n                    onChange={this.handleChange}\n                /><br />\n                <button type=\"submit\">만들기</button>\n            </form>\n\t\t\t</div>\n        );\n    }\n}\n\nclass Makevote extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            voteType: 0,\n        };\n    }\n\n    handleClick(mode) {\n        this.setState(\n            { voteType: mode }\n        )\n    }\n\n    render() {\n        return (\n            <fieldset>\n                <legend>\n                    <button onClick={() => this.handleClick(1)}>찬반 투표</button>\n                    <button onClick={() => this.handleClick(2)}>회장 선거</button>\n                    <button onClick={() => this.handleClick(3)}>새 템플릿</button>\n                </legend>\n                <Formvote\n                    value={this.state.voteType}\n                    onClick={(title, content, votetype) => this.props.onClick(title, content, votetype)}\n                />\n            </fieldset>\n        );\n    }\n}\n\nclass Listvote extends React.Component {\n    render() {\n        const votelist = this.props.votelist;\n\n        const show_vote_list = votelist.map((vote, num) => {\n            if (!vote.title) return;\n            return (\n                <fieldset key={num}>\n                    <p>제목 : {vote.title}</p>\n                    <p>내용 : {vote.content}</p>\n                    <p>의결 문안 : {vote.votetype}</p>\n                </fieldset>\n            )\n        });\n\n        return (\n            <div>{show_vote_list}</div>\n        );\n    }\n\n}\n\nclass Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            future_votes: [{\n                title: '',\n                content: '',\n                votetype: '',\n            }],\n            stepNumber: 0,\n        };\n\n    }\n\n    handleClick(title, content, votetype) {\n        const future_votes = this.state.future_votes.slice(0, this.state.stepNumber + 1);\n        this.setState({\n            future_votes: future_votes.concat([\n                {\n                    title: title,\n                    content: content,\n                    votetype: votetype,\n                }\n            ]),\n            stepNumber: future_votes.length,\n        });\n    }\n\n    render() {\n        const future_votes = this.state.future_votes;\n        const current = future_votes[this.state.stepNumber];\n\n        console.log(future_votes);\n        return (\n            <div>\n                <header>\n                    sparcs <br />\n                </header>\n                <Makevote\n                    title={current.title}\n                    content={current.content}\n                    votetype={current.votetype}\n                    onClick={(title, content, votetype) => this.handleClick(title, content, votetype)}\n                />\n                <Listvote\n                    votelist={this.state.future_votes}\n                />\n            </div>\n        );\n    }\n}\n\n\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}